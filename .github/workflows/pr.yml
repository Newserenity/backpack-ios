name: pr

on:
  pull_request:
    branches: [main]

concurrency:
  group: ${{ github.workflow }}-${{ github.head_ref || github.run_id }}
  cancel-in-progress: true

defaults:
  run:
    shell: bash -l {0}

jobs:
  Build:
    name: Build
    permissions:
      statuses: write
      pull-requests: write
    uses: ./.github/workflows/_build.yml
    secrets:
      GH_APP_PRIVATE_KEY: ${{ secrets.GH_APP_PRIVATE_KEY }}

  BuildDocs:
    name: Build Docs
    permissions:
      statuses: write
      pull-requests: write
    uses: ./.github/workflows/_build-docs.yml

  Dependabot:
    runs-on: ubuntu-22.04
    permissions:
      pull-requests: write
    if: ${{ github.actor == 'dependabot[bot]' }}
    steps:
      - uses: actions/create-github-app-token@v2
        id: app-token
        with:
          app-id: ${{ vars.GH_APP_ID }}
          private-key: ${{ secrets.GH_APP_PRIVATE_KEY }}

      - name: Apply dependencies label
        uses: actions/github-script@v7
        with:
          github-token: ${{ steps.app-token.outputs.token }}
          script: |
            const prNumber = context.issue.number;

            // Get current labels
            const { data: currentLabels } =
              await github.rest.issues.listLabelsOnIssue({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: prNumber
            });

            const currentLabelNames = currentLabels.map(label => label.name);
            const conflictingLabels = ['major', 'minor', 'patch'];

            // Remove conflicting labels if they exist
            for (const conflictingLabel of conflictingLabels) {
              if (currentLabelNames.includes(conflictingLabel)) {
                await github.rest.issues.removeLabel({
                  owner: context.repo.owner,
                  repo: context.repo.repo,
                  issue_number: prNumber,
                  name: conflictingLabel
                });
                console.log(`Removed conflicting label: ${conflictingLabel}`);
              }
            }

            // Add the dependencies label if it's not already present
            if (!currentLabelNames.includes('dependencies')) {
              await github.rest.issues.addLabels({
                owner: context.repo.owner,
                repo: context.repo.repo,
                issue_number: prNumber,
                labels: ['dependencies']
              });
              console.log('Added dependencies label');
            } else {
              console.log('Dependencies label already present');
            }
